version: '3'
services:
  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    networks:
      - broker-kafka

  webserver:
    image: puckel/docker-airflow:1.10.9
    build:
      context: https://github.com/puckel/docker-airflow.git#1.10.9
      dockerfile: Dockerfile
      args:
        PYTHON_DEPS: sqlalchemy==1.3.0 markupsafe==2.0.1 wtforms==2.2 azure-storage-blob==12.14.1 azure-cosmos==4.0.0 requests~=2.23.0
    restart: always
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - FERNET_KEY=S13e9NGOO9twOYbP_JIhNFn1YDLZ9m3ep8F7RlqNGbk=
      - AIRFLOW__WEBSERVER__WORKERS=8
      - AIRFLOW__CORE__DAGS_FOLDER=/usr/local/airflow/pipeline/dags
      - ADOBE_API_KEY=${ADOBE_API_KEY}
      - ADOBE_PRODUCT=${ADOBE_PRODUCT}
      - ADOBE_CONTAINER_NAME=${ADOBE_CONTAINER_NAME}
      - PEXELS_AUTH=${PEXELS_AUTH}
      - PEXELS_CONTAINER_NAME=${PEXELS_CONTAINER_NAME}
      - PIXABAY_KEY=${PIXABAY_KEY}
      - PIXABAY_CONTAINER_NAME=${PIXABAY_CONTAINER_NAME}
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
      - COSMOS_URI=${COSMOS_URI}
      - COSMOS_KEY=${COSMOS_KEY}
    volumes:
      - ./pipeline:/usr/local/airflow/pipeline
      # Uncomment to include custom plugins
      # - ./plugins:/usr/local/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - broker-kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  consumer:
    build:
      context: ./kafka/consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=adobe,pixabay,pexels
      - COSMOS_URI=${COSMOS_URI}
      - COSMOS_KEY=${COSMOS_KEY}
    ports:
      - 8001:8001
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - publisher
    networks:
      - broker-kafka
    volumes:
      - ./pipeline/utils/cosmos_factory.py:/consumer/app/cosmos_factory.py

  publisher:
    build:
      context: ./kafka/publisher
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - broker-kafka
    environment:
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092

networks:
  broker-kafka:
    driver: bridge
